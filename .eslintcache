[{"/Users/brianclarke/Documents/development/memory-game/src/index.tsx":"1","/Users/brianclarke/Documents/development/memory-game/src/App.tsx":"2","/Users/brianclarke/Documents/development/memory-game/src/utils/cards.ts":"3","/Users/brianclarke/Documents/development/memory-game/src/components/card/index.tsx":"4","/Users/brianclarke/Documents/development/memory-game/src/components/winner/index.tsx":"5"},{"size":197,"mtime":1608735543215,"results":"6","hashOfConfig":"7"},{"size":2350,"mtime":1608950575109,"results":"8","hashOfConfig":"7"},{"size":893,"mtime":1608751576282,"results":"9","hashOfConfig":"7"},{"size":683,"mtime":1608950555371,"results":"10","hashOfConfig":"7"},{"size":546,"mtime":1608950532813,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"hhg8h6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/brianclarke/Documents/development/memory-game/src/index.tsx",[],["24","25"],"/Users/brianclarke/Documents/development/memory-game/src/App.tsx",[],"/Users/brianclarke/Documents/development/memory-game/src/utils/cards.ts",[],"/Users/brianclarke/Documents/development/memory-game/src/components/card/index.tsx",["26"],"import \"./card.scss\";\n\ntype Card = {\n  id: number;\n  type: number;\n};\n\ntype Props = {\n  card: Card;\n  isFlipped: boolean;\n  handleClick: (card: Card) => void;\n  matched: boolean;\n};\n\nexport const Card: React.FC<Props> = (props) => {\n  const { card, isFlipped, handleClick, matched } = props;\n  const preventClick = isFlipped || matched;\n  return (\n    <div\n      className={`card ${isFlipped ? \"flipped\" : \"\"} ${\n        matched ? \"matched\" : \"\"\n      }`}\n      onClick={() => (preventClick ? null : handleClick(card))}\n    >\n      <div className='inner'>\n        <div className='front'>{card.type}</div>\n        <div className='back'></div>\n      </div>\n    </div>\n  );\n};\n","/Users/brianclarke/Documents/development/memory-game/src/components/winner/index.tsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":15,"column":14,"nodeType":"33","messageId":"34","endLine":15,"endColumn":35},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"@typescript-eslint/no-redeclare","'Card' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]